"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parallel;

var _request = _interopRequireDefault(require("../request"));

var _sequential = _interopRequireDefault(require("./sequential"));

var _helpers = require("../../util/helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function parallel(next) {
  const {
    queue
  } = this;

  if (queue[0].method.startsWith('execute')) {
    _sequential.default.call(this, next);

    return;
  } // Wait next event loop, saves one request or more


  await (0, _helpers.delay)(0);
  const {
    apiExecuteCount
  } = this.vk.options;
  const tasks = [];
  const chain = [];

  for (let i = 0; i < queue.length; i += 1) {
    if (queue[i].method.startsWith('execute')) {
      continue;
    }

    const request = queue.splice(i, 1)[0];
    i -= 1;
    tasks.push(request);
    chain.push(String(request));

    if (tasks.length >= apiExecuteCount) {
      break;
    }
  }

  try {
    const request = new _request.default('execute', {
      code: (0, _helpers.getChainReturn)(chain)
    });
    next();
    this.callMethod(request);
    (0, _helpers.resolveExecuteTask)(tasks, (await request.promise));
  } catch (error) {
    for (const task of tasks) {
      task.reject(error);
    }
  }
}