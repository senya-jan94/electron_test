"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchCookieFollowRedirectsDecorator = exports.fetchCookieDecorator = void 0;

var _nodeFetch = _interopRequireDefault(require("node-fetch"));

var _debug = _interopRequireDefault(require("debug"));

var _toughCookie = require("tough-cookie");

var _util = require("util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debug = (0, _debug.default)('vk-io:util:fetch-cookie');
const REDIRECT_CODES = [303, 301, 302];

const fetchCookieDecorator = (jar = new _toughCookie.CookieJar()) => {
  const setCookie = (0, _util.promisify)(jar.setCookie).bind(jar);
  const getCookieString = (0, _util.promisify)(jar.getCookieString).bind(jar);
  return async function fetchCookie(url, options = {}) {
    const previousCookie = await getCookieString(url);
    const {
      headers = {}
    } = options;

    if (previousCookie) {
      headers.cookie = previousCookie;
    }

    debug('fetch url %s', url);
    const response = await (0, _nodeFetch.default)(url, Object.assign({}, options, {
      headers
    }));
    const cookies = response.headers.raw()['set-cookie'] || [];

    if (cookies.length === 0) {
      return response;
    }

    await Promise.all(cookies.map(cookie => setCookie(cookie, response.url)));
    return response;
  };
};

exports.fetchCookieDecorator = fetchCookieDecorator;

const fetchCookieFollowRedirectsDecorator = jar => {
  const fetchCookie = fetchCookieDecorator(jar);
  return async function fetchCookieFollowRedirects(url, options = {}) {
    const response = await fetchCookie(url, Object.assign({}, options, {
      redirect: 'manual'
    }));
    const isRedirect = REDIRECT_CODES.includes(response.status);

    if (isRedirect && options.redirect !== 'manual' && options.follow !== 0) {
      debug('Redirect to', response.headers.get('location'));
      let follow;

      if (options.follow) {
        follow = options.follow - 1;
      }

      return await fetchCookieFollowRedirects(response.headers.get('location'), {
        method: 'GET',
        body: null,
        follow
      });
    }

    return response;
  };
};

exports.fetchCookieFollowRedirectsDecorator = fetchCookieFollowRedirectsDecorator;